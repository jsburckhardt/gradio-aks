name: app_build

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - '.github/**'
  pull_request:
    branches:
      - main
    paths:
      - 'src/**'
      - '.github/**'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pull-requests: write
  id-token: write

env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.repository }}


jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.11
  #     - name: Install dependencies
  #       run: pip install black flake8
  #     - name: Run formatter
  #       run: black --check src
  #     - name: Run linter
  #       run: flake8 src
  release:
    # needs: test
    # if: ${{ needs.test.result == 'success' && github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        run: |
          # npm install @semantic-release/exec
          # npm install semantic-release-github
          # npm install @semantic-release/git
          # npx semantic-release
          echo $PWD
          echo $GH_TOKEN | docker login ghcr.io -u jsburckhardt --password-stdin
          export APP_VERSION=latest && cd ./build && ./release.sh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
